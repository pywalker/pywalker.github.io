<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>pywalker</title>
  
  <subtitle>python</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.pywalker.top/"/>
  <updated>2017-12-17T19:37:27.201Z</updated>
  <id>http://www.pywalker.top/</id>
  
  <author>
    <name>adair</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mysql由浅入深-增增删改查</title>
    <link href="http://www.pywalker.top/2017/12/18/mysql%E7%94%B1%E6%B5%85%E5%85%A5%E6%B7%B1-%E5%A2%9E%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/"/>
    <id>http://www.pywalker.top/2017/12/18/mysql由浅入深-增增删改查/</id>
    <published>2017-12-17T19:35:27.000Z</published>
    <updated>2017-12-17T19:37:27.201Z</updated>
    
    <content type="html"><![CDATA[<p>通过前两节的学习，目前我们已经完成了数据库的安装，用户的创建及权限操作等相关操作，但是我们似乎我们只是隐隐约约接触到了数据库的一些基本操作，对数据库表还是比较陌生。那么现在我们呢开始了解一些数据库的一些基本操作。这节我们分为一下几个内容：</p><p>　　关于mysql的基本数据类型可以参照<a href="http://www.cnblogs.com/xuqiang/archive/2010/10/14/1953464.html，此处不再赘述。" target="_blank" rel="noopener">http://www.cnblogs.com/xuqiang/archive/2010/10/14/1953464.html，此处不再赘述。</a></p><pre><code>        数据库的增删操作        数据库表的增删改查操作        数据库表中记录的增删改查操作首先要学习数据库建库是第一步:        创建数据库的语法： create database DBName;        删除数据库的语法： drop database DBName;        使用数据库的语法： use DBName;</code></pre><p>　　　　　上面三条语句就开启了学习数据库的第一步。。。。。。　　　　　　</p><p>　　2. 我们再来回顾一下表的概念。表其实是一个二维结构的数据，从横向看，表的基本组成是记录，从纵向看，表的基本组成是属性（感觉有点扯了！但是还是有一点道理的）。</p><pre><code>        表的创建：这里举个例子，表名： Baidu，属性：name，age，salary。（不完善，举个例子啊）</code></pre><p> 　　　　　　　　　　　　　 语法： create table Baidu（name varchar(10),age int,salary int);</p><pre><code>        表的删除：  drop table Baidu;        表的修改：分为一下两类：            表属性增加：  alter table Baidu add column tel varchar(20);这里你是不是在想为什么不用update？　其实这个问题可以从语言的定义上面就加以区分，update是属于数据库操作语言，即DML，而Alter是数据库定义语言，即DDL，所以在进行表结构更改的时候智能使用Alter，再更改记录的时候使用update。            表属性删除： alter table Baidu drop column tel;        表的查看：  如果在进行数据库插入操作的时候数据库频繁报错，由于数据格式不符合等相关原因，我觉得你有必要看看表的定义是怎么样的，是不是插入的数据格式有问题。语法describe Baidu;</code></pre><p>　　3.  上面说了表的增删改查，下面来看看数据库表中记录的增删改查：</p><pre><code>        记录的插入操作： 语法： insert into table tableName(name type,name1 type1,.......) values(name,name1,......);同上面的例子一样，我们来把我的基本信息插入到表中：insert into table Baidu(name varchar(10),age int,salary int) values(&quot;libo&quot;,23,300000);这其实只是我的幻想，我并没有30万年薪！        记录删除操作：  语法： delete from tablename where condition;如果有一天我被公司开除了，那么我的信息将会被删除（事实上公司不会删除，而是有一个flag标志位）;　delete form Baidu where name=&quot;libo&quot;;        记录修改操作：  语法： update table set x=** where condition;  涨工资： update Baidu set salary = 400000 where name=&quot;libo&quot;;        记录查找操作：  语法： select params from table where condition;  查看我的个人信息： select * from Baidu where name=&quot;libo&quot;;</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通过前两节的学习，目前我们已经完成了数据库的安装，用户的创建及权限操作等相关操作，但是我们似乎我们只是隐隐约约接触到了数据库的一些基本操作，对数据库表还是比较陌生。那么现在我们呢开始了解一些数据库的一些基本操作。这节我们分为一下几个内容：&lt;/p&gt;
&lt;p&gt;　　关于mysql的
      
    
    </summary>
    
    
      <category term="mysql" scheme="http://www.pywalker.top/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>flask1-配置flask</title>
    <link href="http://www.pywalker.top/2017/12/17/flask1-%E9%85%8D%E7%BD%AEflask/"/>
    <id>http://www.pywalker.top/2017/12/17/flask1-配置flask/</id>
    <published>2017-12-17T06:33:03.000Z</published>
    <updated>2017-12-17T06:43:53.228Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="flask" scheme="http://www.pywalker.top/tags/flask/"/>
    
  </entry>
  
  <entry>
    <title>python爬虫-2</title>
    <link href="http://www.pywalker.top/2017/12/17/python%E7%88%AC%E8%99%AB-1/"/>
    <id>http://www.pywalker.top/2017/12/17/python爬虫-1/</id>
    <published>2017-12-17T06:20:44.000Z</published>
    <updated>2017-12-17T06:21:19.395Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="python爬虫" scheme="http://www.pywalker.top/tags/python%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>python爬虫-1</title>
    <link href="http://www.pywalker.top/2017/12/17/python%E7%88%AC%E8%99%AB/"/>
    <id>http://www.pywalker.top/2017/12/17/python爬虫/</id>
    <published>2017-12-17T06:18:12.000Z</published>
    <updated>2017-12-17T06:21:22.346Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="python爬虫" scheme="http://www.pywalker.top/tags/python%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
</feed>
